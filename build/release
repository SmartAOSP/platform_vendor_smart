#!/bin/bash
# This script will perform follow things
# https://source.android.com/devices/tech/ota/sign_builds.html

SMART_TOOLS_DIR=${ANDROID_BUILD_TOP}/vendor/smart/build
RELEASE_TOOLS_DIR=${ANDROID_BUILD_TOP}/build/tools/releasetools
DATE=`date '+%Y%m%d'`
DIST_DIR=${ANDROID_BUILD_TOP}/dist/${DATE}
TARGET_FILENAME=${TARGET_PRODUCT}-target_files-eng.build.zip
UNSIGNED_TARGET_FILES=${DIST_DIR}/${TARGET_FILENAME}
SIGNED_TARGET_FILES=${DIST_DIR}/signed-${TARGET_FILENAME}
SIGNED_IMAGE=${DIST_DIR}/signed-${TARGET_PRODUCT}-img-${DATE}.zip

cd ${ANDROID_BUILD_TOP}

if [ x"$@" != x"-f" ]; then
${SMART_TOOLS_DIR}/cleanodex && \
  make -j$(getconf _NPROCESSORS_ONLN) \
      TARGET_NO_RECOVERY=true \
      bsdiff imgdiff dumpkey signapk \
      target-files-package \
      dist DIST_DIR=${DIST_DIR} \
      || exit 1
fi

TMPDIR=`mktemp -d -t smart.XXXXXXXXXX`
mkdir -p ${TMPDIR}
export TMPDIR

clean_tmp() {
  rm -rf ${TMPDIR}
}

trap clean_tmp EXIT

override_property() {
  TARGET_FILES=$1
  PROP_FILE=$2
  PROP_NAME=$3
  PROP_VALUE=$4
  (
    cd $(dirname ${TARGET_FILES}) && \
      mkdir -p $(dirname $PROP_FILE) && \
      unzip -p ${TARGET_FILES} ${PROP_FILE} | sed -e "s/${PROP_NAME}=.*/${PROP_NAME}=${PROP_VALUE}/g" > ${PROP_FILE} && \
      zip -u ${TARGET_FILES} ${PROP_FILE} && \
      rm -rf $(dirname $PROP_FILE) || exit 1
  )
}

${RELEASE_TOOLS_DIR}/sign_target_files_apks \
      --path=${ANDROID_HOST_OUT} \
      -d vendor/smart/build/security \
      -o ${UNSIGNED_TARGET_FILES} \
      ${SIGNED_TARGET_FILES} && \
  ${RELEASE_TOOLS_DIR}/img_from_target_files \
      ${SIGNED_TARGET_FILES} ${SIGNED_IMAGE}
